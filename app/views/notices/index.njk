{% extends 'layout.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from 'govuk/components/error-summary/macro.njk' import govukErrorSummary %}
{% from "govuk/components/pagination/macro.njk" import govukPagination %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% from "macros/notice-status-tag.njk" import statusTag %}

{% block content %}
  {% if error %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: error.errorList
    }) }}
  {% endif %}

  {# Main heading #}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <h1 class="govuk-heading-xl">{{ pageTitle }}</h1>

      <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
    </div>
  </div>

  {# Filters #}
  <div class="govuk-grid-row govuk-!-margin-bottom-2">
    <div class="govuk-grid-column-full">
      {% set filtersForm %}
        <h2 class="govuk-heading-m govuk-!-margin-bottom-3">Filter by</h2>
        <form  method="post">
          <input type="hidden" name="wrlsCrumb" value="{{wrlsCrumb}}"/>

          {# Filter by licence issues #}
            {{ govukCheckboxes({
              classes: "govuk-checkboxes--small",
              name: "noticeTypes",
              fieldset: {
                legend: {
                  text: "Notice type",
                  isPageHeading: false,
                  classes: "govuk-fieldset__legend--s"
                }
              },
              items: [
                {
                  value: "legacyNotifications",
                  text: "Legacy (Hands off flows and expiry notifications)",
                  checked: filters.noticeTypes.includes('legacyNotifications'),
                  attributes: { 'data-test': 'legacy-notifications' }
                },
                {
                  value: "paperReturnForms",
                  text: "Paper return",
                  checked: filters.noticeTypes.includes('paperReturnForms'),
                  attributes: { 'data-test': 'returns-paper-form' }
                },
                {
                  value: "returnReminder",
                  text: "Returns reminder",
                  checked: filters.noticeTypes.includes('returnReminder'),
                  attributes: { 'data-test': 'returns-reminders' }
                },
                {
                  value: "returnInvitation",
                  text: "Returns invitation",
                  checked: filters.noticeTypes.includes('returnInvitation'),
                  attributes: { 'data-test': 'returns-invitation' }
                },
                {
                  value: "resume",
                  text: "Resume alert",
                  checked: filters.noticeTypes.includes('resume'),
                  attributes: { 'data-test': 'water-abstraction-alert-resume' }
                },
                {
                  value: "stop",
                  text: "Stop alert",
                  checked: filters.noticeTypes.includes('stop'),
                  attributes: { 'data-test': 'water-abstraction-alert-stop' }
                },
                {
                  value: "reduce",
                  text: "Reduce alert",
                  checked: filters.noticeTypes.includes('reduce'),
                  attributes: { 'data-test': 'water-abstraction-alert-reduce' }
                },
                {
                  value: "warning",
                  text: "Warning alert",
                  checked: filters.noticeTypes.includes('warning'),
                  attributes: { 'data-test': 'water-abstraction-alert-warning' }
                }
              ]
            }) }}

            {# Filter by sent by #}
            {{ govukInput({
              label: {
                text: "Sent by",
                classes: "govuk-label--s",
                isPageHeading: false
              },
              classes: "govuk-input--width-20",
              hint: {
                text: 'You can use partial matches, for example, "rachel" or "defra.gov.uk"'
              },
              id: "sentBy",
              name: "sentBy",
              value: filters.sentBy,
              errorMessage: {
                text: error.sentBy.message
              } if error.sentBy
            }) }}

            {# Filter by reference #}
            {{ govukInput({
              label: {
                text: "Reference",
                classes: "govuk-label--s",
                isPageHeading: false
              },
              classes: "govuk-input--width-10",
              id: "reference",
              name: "reference",
              value: filters.reference,
              errorMessage: {
                text: error.reference.message
              } if error.reference
            }) }}

          <p class="govuk-!-font-weight-bold">Sent Dates</p>

          {# Filter by from date #}
          {{ govukDateInput({
            id: 'fromDate',
            errorMessage: {
              text: error.fromDate.message
            } if error.fromDate,
            fieldset: {
              legend: {
                text: "From",
                classes: "govuk-fieldset__legend--xs govuk-!-font-weight-bold"
              }
            },
            items: [
              {
                classes: 'govuk-input--width-2 ' + errorClass,
                name: 'sentFromDay',
                label: 'Day',
                value: filters.sentFromDay
              },
              {
                classes: 'govuk-input--width-2 ' + errorClass,
                name: 'sentFromMonth',
                label: 'Month',
                value: filters.sentFromMonth
              },
              {
                classes: 'govuk-input--width-4 ' + errorClass,
                name: 'sentFromYear',
                label: 'Year',
                value:filters.sentFromYear
              }
            ]
          }) }}

          {# Filter by to date #}
          {{ govukDateInput({
            id: 'toDate',
            errorMessage: {
              text: error.toDate.message
            } if error.toDate,
            fieldset: {
              legend: {
                text: "To",
                classes: "govuk-fieldset__legend--xs govuk-!-font-weight-bold"
              }
            },
            items: [
              {
                classes: 'govuk-input--width-2 ' + errorClass,
                name: 'sentToDay',
                label: 'Day',
                value: filters.sentToDay
              },
              {
                classes: 'govuk-input--width-2 ' + errorClass,
                name: 'sentToMonth',
                label: 'Month',
                value: filters.sentToMonth
              },
              {
                classes: 'govuk-input--width-4 ' + errorClass,
                name: 'sentToYear',
                label: 'Year',
                value: filters.sentToYear
              }
            ]
          }) }}

          <div class="govuk-button-group">
            {{ govukButton({
              text: "Apply filters",
              preventDoubleClick: true
            }) }}

            {{ govukButton({
              text: "Clear filters",
              classes: "govuk-button--secondary ",
              name: "clearFilters",
              value: 'reset',
              preventDoubleClick: true
            }) }}
          </div>
        </form>
      {% endset %}

      {{ govukDetails({
        summaryText: "Filters",
        html: filtersForm,
        classes: "govuk-!-margin-bottom-2",
        open: filters.openFilter
      }) }}
    </div>
  </div>

  {# Results #}
  <div class="govuk-grid-row govuk-!-margin-bottom-9">
    <div class="govuk-grid-column-full">
      {# Results #}
      {% if notices|length === 0 %}
        <p class="govuk-body">No notices found.</p>
      {% else %}
        {# Generate the row data for the table #}
        {% set tableRows = [] %}
        {% for notice in notices %}
          {# Set an easier to use index #}
          {% set rowIndex = loop.index0 %}

          {# Link to view the notice #}
          {% set viewLink %}
            <a class="govuk-link" href="{{ notice.link }}">{{ notice.createdDate }}</a>
          {% endset %}

          {% set noticeStatusTag %}
            {{ statusTag(notice.status, true) }}
          {% endset %}

          {% set tableRow = [
            {
              html: viewLink,
              attributes: { 'data-test': 'notice-date-created-' + rowIndex }
            },
            {
              text: notice.reference,
              attributes: { 'data-test': 'notice-reference-' + rowIndex }
            },
            {
              text: notice.type,
              attributes: { 'data-test': 'notice-type-' + rowIndex }
            },
            {
              text: notice.sentBy,
              attributes: { 'data-test': 'notice-sent-by-' + rowIndex }
            },
            {
              text: notice.recipients,
              attributes: { 'data-test': 'notice-recipients-' + rowIndex },
              format: 'numeric'
            },
            {
              html: noticeStatusTag,
              attributes: { 'data-test': 'notice-status-' + rowIndex },
              format: 'numeric'
            }
          ] %}

          {# Push our row into the table rows array #}
          {% set tableRows = (tableRows.push(tableRow), tableRows) %}
        {% endfor %}

        {{ govukTable({
          caption: tableCaption,
          captionClasses: "govuk-table__caption--s govuk-!-margin-bottom-2",
          firstCellIsHeader: false,
          attributes: { 'data-test': 'notifications' },
          head: [
            { text: 'Date' },
            { text: 'Reference' },
            { text: 'Notice type' },
            { text: 'Sent by' },
            { text: 'Recipients', format: 'numeric' },
            { text: 'Status', format: 'numeric' }
          ],
          rows: tableRows
        }) }}

        {% if pagination.numberOfPages > 1 %}
          {{ govukPagination(pagination.component) }}
        {% endif %}

      {% endif %}
    </div>
  </div>
{% endblock %}
