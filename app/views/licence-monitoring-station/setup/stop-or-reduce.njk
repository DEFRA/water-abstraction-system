{% extends 'layout.njk' %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}

{% block breadcrumbs %}
  {{
  govukBackLink({
    text: 'Back',
    href: backLink
  })
  }}
{% endblock %}

{% block content %}
  {% if error %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: [
        {
          text: error.message,
          href: "#stop-or-reduce-error"
        }
      ]
    }) }}
  {%endif%}

  {# Main heading #}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-3">
    <span class="govuk-caption-l">{{ monitoringStationLabel }}</span> {{ pageTitle }}
  </h1>

  <div>
    <form method="post">
      <input type="hidden" name="wrlsCrumb" value="{{wrlsCrumb}}"/>

      {% set reduceAtThresholdHTML %}
        {{ govukRadios({
          classes: "govuk-radios--inline",
          name: "reduceAtThreshold",
          fieldset: {
            legend: {
              text: 'Does the licence holder need to stop abstraction when they reach a certain amount?',
              classes: "govuk-fieldset__legend"
            }
          },
          hint: {
            text: 'For example, you must not exceed 4000ML in total from the start of your abstraction period.'
          },
          items: [
            {
              value: "yes",
              text: "Yes",
              checked: reduceAtThreshold === 'yes'
            },
            {
              value: "no",
              text: "No",
              checked: reduceAtThreshold === 'no'
            }
          ],
          errorMessage: error.reduceAtThresholdRadioElement
        }) }}
      {% endset %}

      {{ govukRadios({
        name: "stopOrReduce",
        items: [
          {
            value: "stop",
            text: "Stop",
            checked: stopOrReduce === 'stop'
          },
          {
            value: "reduce",
            text: "Reduce",
            checked: stopOrReduce === 'reduce',
            conditional: {
              html: reduceAtThresholdHTML
            }
          }
        ],
        errorMessage: error.stopOrReduceRadioElement
      }) }}

      {{ govukButton({ text: "Continue", preventDoubleClick: true }) }}
    </form>
  </div>
{% endblock %}
