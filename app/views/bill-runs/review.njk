{% extends 'layout.njk' %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}

{% block breadcrumbs %}
  {# Back link #}
  {{ govukBackLink({
      text: 'Go back to bill runs',
      href: '/billing/batch/list'
  }) }}
{% endblock %}

{% block content %}
  {# Main heading #}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <span class="govuk-caption-l">{{ region }} {{ billRunType }} bill run</span>
      <h1 class="govuk-heading-xl govuk-!-margin-bottom-3">{{ pageTitle }}</h1>

      {# Status badge #}
      {% if status == 'review' %}
        {% set colour = "govuk-tag--blue govuk-!-font-size-27" %}
      {% else %}
        {% set colour = "govuk-tag--green govuk-!-font-size-27" %}
      {% endif %}

      <p class="govuk-body">
        {{ govukTag({
          text: status,
          classes: colour
        }) }}
      </p>

      {# Bill run meta-data #}
      {{ govukSummaryList({
          classes: 'govuk-summary-list--no-border',
          rows: [
            {
              key: {
                text: 'Date created',
                classes: "meta-data__label"
              },
              value: {
                html: '<span data-test="meta-data-created">' + dateCreated + '</span>',
                classes: "meta-data__value"
              }
            },
            {
              key: {
                text: 'Region',
                classes: "meta-data__label"
              },
              value: {
                html: '<span data-test="meta-data-region">' + region + '</span>',
                classes: "meta-data__value"
              }
            },
            {
              key: {
                text: 'Bill run type',
                classes: "meta-data__label"
              },
              value: {
                html: '<span data-test="meta-data-type">' + billRunType | capitalize + '</span>',
                classes: "meta-data__value"
              }
            },
            {
              key: {
                text: 'Charge scheme',
                classes: "meta-data__label"
              },
              value: {
                html: '<span data-test="meta-data-scheme">Current</span>',
                classes: "meta-data__value"
              }
            },
            {
              key: {
                text: 'Financial year',
                classes: "meta-data__label"
              },
              value: {
                html: '<span data-test="meta-data-year">' + financialYear + '</span>',
                classes: "meta-data__value"
              }
            }
          ]
        }) }}
    </div>
  </div>

  {# Dynamic message either telling the user they have issues to deal with or that they can generate bills #}
  {% if numberOfLicencesToReview > 0 %}
    <section class="govuk-!-margin-bottom-9">
      {{ govukInsetText({
        html: '<span data-test="licences-to-review">You need to review ' + numberOfLicencesToReview + ' licences with returns data issues. You can then continue and send the bill run.</span>'
      }) }}
    </section>
  {% else %}
    <section class="govuk-!-margin-bottom-9">
      {{ govukInsetText({
        html: '<span data-test="licences-to-review">You have resolved all returns data issues. Continue to generate bills.</span>'
      }) }}
    </section>
  {% endif %}

  {# Cancel bill run button #}
  <section class="govuk-!-margin-bottom-9">
    {{ govukButton({
      classes: "govuk-button--secondary govuk-!-margin-bottom-0",
      text: "Cancel bill run",
      href: "cancel"
    }) }}
  </section>


  {# Licence filter #}
  {% set filtersForm %}
    <h2 class="govuk-heading-m govuk-!-margin-bottom-3">Filter by</h2>

    <form  method="post" novalidate action="review">
      {# Filter by licence holder #}
      {{ govukInput({
        label: {
          text: "Licence holder",
          classes: "govuk-label--s",
          isPageHeading: false
        },
        classes: "govuk-input--width-20",
        id: "filter-licence-holder",
        name: "filterLicenceHolder",
        value: filter.licenceHolder
      }) }}

      {# Filter by licence issues #}
      {{ govukCheckboxes({
        classes: "govuk-checkboxes--small",
        name: "issues",
        fieldset: {
          legend: {
            text: "Issue",
            isPageHeading: false,
            classes: "govuk-fieldset__legend--s"
          }
        },
        items: [
          {
            value: "abs-outside-period",
            text: "Abstraction outside period",
            checked: filter.absOutsidePeriod
          },
          {
            value: "aggregate-factor",
            text: "Aggregate",
            checked: filter.aggregateFactor
          },
          {
            value: "checking-query",
            text: "Checking query",
            checked: filter.checkingQuery
          },
          {
            value: "no-returns-received",
            text: "No returns received",
            checked: filter.noReturnsReceived
          },
          {
            value: "over-abstraction",
            text: "Over abstraction",
            checked: filter.overAbstraction
          },
          {
            value: "overlap-of-charge-dates",
            text: "Overlap of charge dates",
            checked: filter.overlapOfChargeDates
          },
          {
            value: "returns-received-not-processed",
            text: "Returns received but not processed",
            checked: filter.returnsReceivedNotProcessed
          },
          {
            value: "returns-late",
            text: "Returns received late",
            checked: filter.returnsLate
          },
          {
            value: "return-split-over-refs",
            text: "Return split over charge references",
            checked: filter.returnSplitOverRefs
          },
          {
            value: "some-returns-not-received",
            text: "Some returns IDs not received",
            checked: filter.someReturnsNotReceived
          },
          {
            value: "unable-to-match-return",
            text: "Unable to match return",
            checked: filter.unableToMatchReturn
          }
        ]
      }) }}

      {# Filter by licence status #}
      {{ govukRadios({
        classes: "govuk-radios--small",
        name: "filterLicenceStatus",
        fieldset: {
          legend: {
            text: "Status",
            isPageHeading: false,
            classes: "govuk-fieldset__legend--s"
          }
        },
        items: [
          {
            value: "review",
            text: "Review",
            checked: filter.licenceStatus === 'review'
          },
          {
            value: "ready",
            text: "Ready",
            checked: filter.licenceStatus === 'ready'
          }
        ]
      }) }}

      <div class="govuk-button-group">
        {{ govukButton({
          text: "Apply filters"
        }) }}

        {{ govukButton({
          text: "Clear filters",
          classes: "govuk-button--secondary ",
          name: "clearFilters",
          type: "reset",
          href: "review"
        }) }}
      </div>
    </form>
  {% endset %}

  {{ govukDetails({
    summaryText: "Filter licences",
    html: filtersForm,
    classes: "govuk-!-margin-bottom-2",
    open: filter.openFilter
  }) }}

  {# Generate the row data for the table #}
  {% set tableRows = [] %}
    {% if preparedLicences.length > 0 %}
      {% for licence in preparedLicences %}
        {% if licence.status == 'review' %}
          {% set colour = "govuk-tag--blue" %}
        {% else %}
          {% set colour = "govuk-tag--green" %}
        {% endif %}

        {% set statusTag %}
          {{govukTag({
            text: licence.status,
            classes: colour
          })}}
        {% endset %}

        {% set action %}
          <a class="govuk-link" href="review/{{ licence.id }}">{{ licence.licenceRef }}<span class="govuk-visually-hidden">View licence matching for licence {{ licence.licenceRef }} </a>
        {% endset %}

      {% set tableRow = [
        {
          html: action,
          attributes: { 'data-test': 'licence-' + loop.index }
        },
        {
          text: licence.licenceHolder,
          attributes: { 'data-test': 'licence-holder-' + loop.index }
        },
        {
          text: licence.issue,
          attributes: { 'data-test': 'licence-issue-' + loop.index }
        },
        {
          html: statusTag, classes: "govuk-!-text-align-right",
          attributes: { 'data-test': 'licence-status-' + loop.index }
          }
      ] %}
      {% set tableRows = (tableRows.push(tableRow), tableRows) %}
      {% endfor %}
    {% endif %}

  {# Sets the caption to be used in the table below #}
  {% if totalNumberOfLicences > numberOfLicencesDisplayed %}
    {% set caption = "Showing " + numberOfLicencesDisplayed + " of " + totalNumberOfLicences + " licences" %}
  {% else %}
    {% set caption = "Showing all " + totalNumberOfLicences + " licences" %}
  {% endif %}

  {# Table displaying details of the licences in the bill run. These results take into account any filter that is set #}
  {{ govukTable({
    caption: caption,
    captionClasses: "govuk-table__caption--s govuk-!-margin-bottom-2",
    firstCellIsHeader: false,
    head: [
      {
        text: 'Licence'
      },
      {
        text: 'Licence holder'
      },
      {
        text: 'Issue'
      },
      {
        text: 'Status',
        format: "numeric"
      }
    ],
    rows: tableRows
  }) }}
{% endblock %}
