{% extends 'layout.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% block pageContent %}
  {{ pageHeadingHtml }}

  <div class="govuk-!-margin-bottom-9">
    {{ govukSummaryList({
        classes: 'govuk-summary-list--no-border',
        attributes: {
          'data-test': 'meta-data'
        },
        rows: [
          {
            key: { text: "Site description", classes: "meta-data__label" },
            value: { html: '<span data-test="site-description">' + siteDescription + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Purpose", classes: "meta-data__label" },
            value: { html: '<span data-test="purpose">' + purposes + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Return period", classes: "meta-data__label" },
            value: { html: '<span data-test="returns-period">' + returnPeriod + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Abstraction period", classes: "meta-data__label" },
            value: { html: '<span data-test="abstraction-period">' + abstractionPeriod + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Tariff", classes: "meta-data__label" },
            value: { html: '<span data-test="tariff">' + tariff + '</span>', classes: "meta-data__value" }
          }
        ]
      })
    }}
  </div>

  {# Notes #}
  <div class="govuk-!-margin-bottom-9">
    <h2 class="govuk-heading-l govuk-!-margin-bottom-4">Notes</h2>
    <hr class="govuk-section-break--visible">
    <div class="govuk-summary-list govuk-!-margin-bottom-1">
      <p class="govuk-body">{{ note.text | escape | nl2br }}</p>
      <span class="govuk-summary-list__actions">
      <ul class="govuk-summary-list__actions-list">
        {% for action in note.actions %}
          <li class="govuk-summary-list__actions-list-item">
            <a class="govuk-link" href="{{ action.href }}" data-test="{{ action.href }}">
              {{ action.text }} <span class="govuk-visually-hidden">the note</span>
            </a>
          </li>
        {% endfor %}
      </ul>
      </span>
    </div>
    <hr class="govuk-section-break--visible">
  </div>

  {# Meter details #}
  {% set meterDetails %}
    {% if meterProvided === 'yes' %}
      <div>{{meterMake}}</div><div>{{meterSerialNumber}}</div>
      {% if meter10TimesDisplay === 'yes' %}
        <div>Has &times;10 display</div>
      {% endif %}
    {% else %}
      <div>Not provided</div>
    {% endif %}
  {% endset %}

  {# Reporting details #}
  <div class="govuk-!-margin-bottom-9">
    {{ govukSummaryList({
      card: {
        title: { text: "Reporting details" }
      },
      rows: [
        {
          key: { text: "Return received" },
          value: { text: returnReceivedDate },
          actions: {
            items: [
              {
                href: links.received,
                text: "Change",
                visuallyHiddenText: "return received date"
              }
            ]
          }
        },
        {
          key: { text: "Nil return" },
          value: { text: nilReturn },
          actions: {
            items: [
              {
                href: links.nilReturn,
                text: "Change",
                visuallyHiddenText: "nil return"
              }
            ]
          }
        },
        {
          key: { text: "Reporting figures" },
          value: { text: reportingFigures },
          actions: {
            items: [
              {
                href: links.reported,
                text: "Change",
                visuallyHiddenText: "reporting figures"
              }
            ]
          }
        } if nilReturn === "No",
        {
          key: { text: "Start meter reading" },
          value: { text: startReading },
          actions: {
            items: [
              {
                href: links.startReading,
                text: "Change",
                visuallyHiddenText: "start meter reading"
              }
            ]
          }
        } if nilReturn === "No" and displayReadings,
        {
          key: { text: "Units" },
          value: { text: units },
          actions: {
            items: [
              {
                href: links.units,
                text: "Change",
                visuallyHiddenText: "unit of measure"
              }
            ]
          }
        } if nilReturn === "No",
        {
          key: { text: "Meter details" },
          value: { html: meterDetails },
          actions: {
            items: [
              {
                href: links.meterDetails,
                text: "Change",
                visuallyHiddenText: "meter details"
              }
            ]
          }
        } if nilReturn === "No"
      ]
    }) }}
  </div>

  {% if nilReturn === "No" %}
    {# Summary of abstraction volumes #}
    <div class="divider govuk-!-margin-bottom-7"></div>

    {# Create the rows for the summary table #}
    {% set tableRows = [] %}

    {% for row in summaryTableData.rows %}
      {# Set an easier to use index #}
      {% set rowIndex = loop.index0 %}

      {# Create the summary row #}
      {% set tableRow = [
        {
          text: row.month,
          attributes: { 'data-test': 'month-' + rowIndex }
        }
      ] %}

      {% if displayReadings %}
        {% set tableRow = (tableRow.push(
          {
            text: row.reading,
            format: 'numeric',
            attributes: { 'data-test': 'reading-' + rowIndex }
          }
        ), tableRow) %}
      {% endif %}

      {% if displayUnits %}
        {% set tableRow = (tableRow.push(
          {
            text: row.unitTotal,
            format: 'numeric',
            attributes: { 'data-test': 'unit-total-' + rowIndex }
          }
        ), tableRow) %}
      {% endif %}

      {# Total cubic metres column #}
      {% set tableRow = (tableRow.push(
        {
          text: row.monthlyTotal,
          format: 'numeric',
          attributes: { 'data-test': 'monthly-total-' + rowIndex }
        }
      ), tableRow) %}

      {# Action column #}
      {% if row.link %}
        {% set actionLink %}
          <a class="govuk-link" href="{{ row.link.href }}">{{ row.link.text }}<span class="govuk-visually-hidden"> for {{ row.month }}</span></a>
        {% endset %}

        {% set tableRow = (tableRow.push(
          {
            html: actionLink,
            format: 'numeric',
            attributes: { 'data-test': 'action-' + rowIndex }
          }
        ), tableRow) %}
      {% endif %}

      {# Push our row into the table rows array #}
      {% set tableRows = (tableRows.push(tableRow), tableRows) %}
    {% endfor %}

    {# Create the totals row #}
    {% set tableRow = [
      {
        text: "Total volume of water abstracted",
        classes: "govuk-table__header"
      }
    ] %}

    {% if displayReadings %}
      {% set tableRow = (tableRow.push(
        {
          text: ""
        }
      ), tableRow) %}
    {% endif %}

    {% if displayUnits %}
      {% set tableRow = (tableRow.push(
        {
          html: "<strong>" + totalQuantity + "</strong>",
          format: 'numeric',
          attributes: { 'data-test': 'total-quantity' }
        }
      ), tableRow) %}
    {% endif %}

    {# Total cubic metres column #}
    {% set tableRow = (tableRow.push(
      {
        html: "<strong>" + totalCubicMetres + "</strong>",
        format: 'numeric',
        attributes: { 'data-test': 'total-cubic-metres' }
      }
    ), tableRow) %}

    {# Action column #}
    {% set tableRow = (tableRow.push(
      {
        text: ""
      }
    ), tableRow) %}

    {# Push our row into the table rows array #}
    {% set tableRows = (tableRows.push(tableRow), tableRows) %}

    {# Display the table using a GOVUK table component #}
    <div class="govuk-grid-row govuk-!-margin-bottom-0">
      <div class="govuk-grid-column-full">

        <h2 class="govuk-table__caption--l">{{tableTitle}}
          <div>
            <p class="govuk-!-margin-top-2 govuk-!-margin-bottom-0">
              <strong><a class="govuk-link" href="{{links.multipleEntries}}">{{enterMultipleLinkText}}</a></strong> â€“ paste in values for an entire return period
            </p>
          </div>
        </h2>

        {{
          govukTable({
            firstCellIsHeader: false,
            attributes: { 'data-test': 'monthly-summaries'},
            head: summaryTableData.headers,
            rows: tableRows
          })
        }}
      </div>
    </div>
  {% endif %}

  {# "Confirm" & "Cancel" buttons #}
  <form method="post">
    <input type="hidden" name="wrlsCrumb" value="{{wrlsCrumb}}"/>
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Confirm",
        preventDoubleClick: true
      }) }}

      {{ govukButton({
        text: "Cancel",
        classes: "govuk-button--secondary",
        preventDoubleClick: true,
        href: links.cancel
      }) }}
    </div>
  </form>
{% endblock %}
