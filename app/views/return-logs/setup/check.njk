{% extends 'layout.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% block content %}
  {# Notification banner #}
  {% if notification %}
    {{ govukNotificationBanner({
      titleText: notification.title,
      text: notification.text
    }) }}
  {% endif %}

  {# Main heading #}
  <div>
    <span class="govuk-caption-l">Return reference {{ returnReference }}</span>
    <h1 class="govuk-heading-xl">{{ pageTitle }}</h1>
  </div>


  <div class="govuk-!-margin-bottom-9">
    {{ govukSummaryList({
        classes: 'govuk-summary-list--no-border',
        attributes: {
          'data-test': 'meta-data'
        },
        rows: [
          {
            key: { text: "Site description", classes: "meta-data__label" },
            value: { html: '<span data-test="site-description">' + siteDescription + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Purpose", classes: "meta-data__label" },
            value: { html: '<span data-test="purpose">' + purposes + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Return period", classes: "meta-data__label" },
            value: { html: '<span data-test="returns-period">' + returnPeriod + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Abstraction period", classes: "meta-data__label" },
            value: { html: '<span data-test="abstraction-period">' + abstractionPeriod + '</span>', classes: "meta-data__value" }
          },
          {
            key: { text: "Tariff", classes: "meta-data__label" },
            value: { html: '<span data-test="tariff">' + tariff + '</span>', classes: "meta-data__value" }
          }
        ]
      })
    }}
  </div>



  {# Notes #}
  <div class="govuk-!-margin-bottom-9">
    <h2 class="govuk-heading-l govuk-!-margin-bottom-4">Notes</h2>
    <hr class="govuk-section-break--visible">
    <div class="govuk-summary-list govuk-!-margin-bottom-1">
      <p class="govuk-body">{{ note.text | escape | nl2br }}</p>
      <span class="govuk-summary-list__actions">
      <ul class="govuk-summary-list__actions-list">
        {% for action in note.actions %}
          <li class="govuk-summary-list__actions-list-item">
            <a class="govuk-link" href="{{ action.href }}" data-test="{{ action.href }}">
              {{ action.text }} <span class="govuk-visually-hidden">the note</span>
            </a>
          </li>
        {% endfor %}
      </ul>
      </span>
    </div>
    <hr class="govuk-section-break--visible">
  </div>


  {# Meter details #}
  {% set meterDetails %}
    {% if meterProvided === 'yes' %}
      <div>{{meterMake}}</div><div>{{meterSerialNumber}}</div>
    {% else %}
      <div>Not provided</div>
    {% endif %}
  {% endset %}


  {# Reporting details #}
  <div class="govuk-!-margin-bottom-9">
    {{ govukSummaryList({
      card: {
        title: { text: "Reporting details" }
      },
      rows: [
        {
          key: { text: "Return received" },
          value: { text: returnReceivedDate },
          actions: {
            items: [
              {
                href: links.received,
                text: "Change",
                visuallyHiddenText: "return received date"
              }
            ]
          }
        },
        {
          key: { text: "Nil return" },
          value: { text: nilReturn },
          actions: {
            items: [
              {
                href: links.nilReturn,
                text: "Change",
                visuallyHiddenText: "nil return"
              }
            ]
          }
        },
        {
          key: { text: "Reporting figures" },
          value: { text: reportingFigures },
          actions: {
            items: [
              {
                href: links.reported,
                text: "Change",
                visuallyHiddenText: "reporting figures"
              }
            ]
          }
        } if nilReturn === "No",
        {
          key: { text: "Meter details" },
          value: { html: meterDetails },
          actions: {
            items: [
              {
                href: links.meterDetails,
                text: "Change",
                visuallyHiddenText: "meter details"
              }
            ]
          }
        } if nilReturn === "No",
        {
          key: { text: "Units" },
          value: { text: units },
          actions: {
            items: [
              {
                href: links.units,
                text: "Change",
                visuallyHiddenText: "unit of measure"
              }
            ]
          }
        } if nilReturn === "No"
      ]
    }) }}
  </div>

  {% if nilReturn === "No" %}
    {# Summary of abstraction volumes #}
    <div class="divider govuk-!-margin-bottom-7"></div>
    {# Meter details #}
    <div class="govuk-grid-row govuk-!-margin-bottom-3">
      <div class="govuk-grid-column-full">
        <h3 class="govuk-heading-l">{{ tableTitle }}</h3>

        {% if displayReadings %}
          {% set startReadingHtml %}
            {% if startReading %}
              {{ govukSummaryList({
                classes: 'govuk-summary-list--no-border govuk-!-margin-top-0 govuk-!-margin-bottom-0',
                rows: [
                  {
                    key: {
                      text: "Start Reading"
                    },
                    value: {
                      text: startReading
                    },
                    actions: {
                      classes: "govuk-!-text-align-left",
                      items: [
                        {
                          href: "#",
                          text: "Change",
                          visuallyHiddenText: " start reading"
                        }
                      ]
                    }
                  }
                ]
              }) }}
            {% else %}
              <div class="govuk-!-padding-top-2 govuk-!-padding-bottom-2">
                <a class="govuk-link" href="#">Enter start reading</a>
              </div>
            {% endif %}
          {% endset %}

          <div class="govuk-grid-column-one-half govuk-!-padding-left-0">
            {{ govukInsetText({
              classes: "govuk-!-margin-bottom-2 govuk-!-margin-top-2 govuk-!-padding-top-0 govuk-!-padding-bottom-0",
              html: startReadingHtml
            }) }}
          </div>
        {% endif %}
      </div>
    </div>

    {# Display the table using a GOVUK table component #}
    <div class="govuk-grid-row govuk-!-margin-bottom-0">
      <div class="govuk-grid-column-full">
        {% set tableRows = [] %}

        {% for row in summaryTableData.rows %}
          {# Set an easier to use index #}
          {% set rowIndex = loop.index0 %}

          {# Create the summary row #}
          {% set tableRow = [
            {
              text: row.month,
              attributes: { 'data-test': 'month-' + rowIndex }
            }
          ] %}

          {% if displayReadings %}
            {% set tableRow = (tableRow.push(
              {
                text: row.reading,
                format: 'numeric',
                attributes: { 'data-test': 'reading-' + rowIndex }
              }
            ), tableRow) %}
          {% endif %}

          {% if displayUnits %}
            {% set tableRow = (tableRow.push(
              {
                text: row.unitTotal,
                format: 'numeric',
                attributes: { 'data-test': 'unit-total-' + rowIndex }
              }
            ), tableRow) %}
          {% endif %}

          {# Total cubic metres column #}
          {% set tableRow = (tableRow.push(
            {
              text: row.monthlyTotal,
              format: 'numeric',
              attributes: { 'data-test': 'monthly-total-' + rowIndex }
            }
          ), tableRow) %}

          {# Action column #}
          {% if row.link %}
            {% set actionLink %}
              <a class="govuk-link" href="{{ row.link.href }}">{{ row.link.text }}<span class="govuk-visually-hidden"> for {{ row.month }}</span></a>
            {% endset %}

            {% set tableRow = (tableRow.push(
              {
                html: actionLink,
                format: 'numeric',
                attributes: { 'data-test': 'action-' + rowIndex }
              }
            ), tableRow) %}
          {% endif %}

          {# Push our row into the table rows array #}
          {% set tableRows = (tableRows.push(tableRow), tableRows) %}
        {% endfor %}

        {{
          govukTable({
            firstCellIsHeader: false,
            attributes: { 'data-test': 'monthly-summaries'},
            head: summaryTableData.headers,
            rows: tableRows
          })
        }}
      </div>
    </div>
  {% endif %}

  {# "Confirm" & "Cancel" buttons #}
  <div class="govuk-button-group">
    {{ govukButton({
      text: "Confirm",
      preventDoubleClick: true
    }) }}

    {{ govukButton({
      text: "Cancel",
      classes: "govuk-button--secondary",
      preventDoubleClick: true,
      href: links.cancel
    }) }}
  </div>
{% endblock %}
