{% extends 'layout.njk' %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}

{% block content %}
  {% if notification %}
    {{ govukNotificationBanner({
      titleText: notification.title,
      text: notification.text
    }) }}
  {% endif %}

  {# Main heading #}
  <div class="govuk-body">
    <h1 class="govuk-heading-xl govuk-!-margin-bottom-3">
      <span class="govuk-caption-l">Licence {{ licenceRef }}</span>
      {{ pageTitle }}
    </h1>
  </div>

  <div class="govuk-!-margin-bottom-9">
    <hr class="govuk-section-break  govuk-!-margin-bottom-2 govuk-section-break--visible">
    {{ govukSummaryList({
      classes: 'govuk-!-margin-bottom-2',
      rows: [
        {
          classes: 'govuk-summary-list govuk-summary-list__row--no-border',
          key: {
            text: "Start date"
          },
          value: {
            html: '<span data-test="meta-data-start-date">' + startDate + '</span>'
          },
          actions: {
            items: [
              {
                html: '<span data-test="meta-data-change-start-date">' + 'Change' + '</span>',
                href: "/system/return-requirements/" + sessionId + "/start-date",
                visuallyHiddenText: "the start date for the return requirement"
              }
            ]
          }
        },
        {
          classes: 'govuk-summary-list govuk-summary-list__row--no-border',
          key: {
            text: "Reason"
          },
          value: {
            html: '<span data-test="meta-data-reason">' + reason + '</span>'
          },
          actions: {
            items: [
              {
                html: '<span data-test="meta-data-change-reason">' + 'Change' + '</span>',
                href: reasonLink,
                visuallyHiddenText: "the reason for the return requirement"
              }
            ]
          }
        }
      ]
    }) }}
    <hr class="govuk-section-break  govuk-!-margin-bottom-2 govuk-section-break--visible">
  </div>

  <div class="govuk-!-margin-bottom-9">
    <h2 class="govuk-heading-l govuk-!-margin-bottom-4" >Notes</h2>
    <hr class="govuk-section-break  govuk-!-margin-bottom-2 govuk-section-break--visible">
    {{ govukSummaryList({
      classes: 'govuk-!-margin-bottom-2',
      rows: [
        {
          classes: 'govuk-summary-list govuk-summary-list__row--no-border',
          key: {
            text: userEmail,
            classes: "govuk-body govuk-!-font-weight-regular"
          },
          value: {
            text: note | escape | nl2br
          },
          actions: {
            items: [
              {
                href: "note",
                text: "Change" if note else "Add a note"
              },
              {
                href: "delete-note",
                text: "Delete"
              } if note
            ]
          }
        }
      ]
    }) }}
    <hr class="govuk-section-break  govuk-!-margin-bottom-2 govuk-section-break--visible">
  </div>

  {% if journey == 'returns-required' %}
    <div class="govuk-!-margin-bottom-9">
      <h2 class="govuk-heading-l govuk-!-margin-bottom-4" >Requirements for returns</h2>
      <form method= "post" action= "/system/return-requirements/{{sessionId}}/add">
        {{ govukButton({
          text: "Add another requirement",
          classes: "govuk-button--secondary",
          preventDoubleClick: true
        }) }}
      </form>
      {% for requirement in requirements %}
        <div>
            {{ govukSummaryList({
              card: {
                title: {
                  text: requirement.siteDescription
                }
              },
              classes: "govuk-summary-list--no-border",
              rows: [
                {
                  key: {
                    text: "Purpose"
                  },
                  value: {
                    html: "requirement.purposes"
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-purpose">' + 'Change' + '</span>',
                        href: "purpose/" + requirement.index ,
                        visuallyHiddenText: "Purpose"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Point"
                  },
                  value: {
                    html: "requirement.points"
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-points">' + 'Change' + '</span>',
                        href: "points/" + requirement.index ,
                        visuallyHiddenText: "Point"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Abstraction period"
                  },
                  value: {
                    html: requirement.abstractionPeriod
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-abstraction-period">' + 'Change' + '</span>',
                        href: "abstraction-period/" + requirement.index ,
                        visuallyHiddenText: "Abstraction period"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Returns cycle"
                  },
                  value: {
                    html: "requirement.returnsCycle"
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-returns-cycle">' + 'Change' + '</span>',
                        href: "returns-cycle/" + requirement.index ,
                        visuallyHiddenText: "Returns cycle"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Site description"
                  },
                  value: {
                    html: requirement.siteDescription
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-site-description">' + 'Change' + '</span>',
                        href: "site-description/" + requirement.index ,
                        visuallyHiddenText: "Site description"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Collection"
                  },
                  value: {
                    html: requirement.frequencyCollected | capitalize
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-frequency-collected">' + 'Change' + '</span>',
                        href: "frequency-collected/" + requirement.index ,
                        visuallyHiddenText: "Collection"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Reporting"
                  },
                  value: {
                    html: requirement.frequencyReported | capitalize
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-frequency-reported">' + 'Change' + '</span>',
                        href: "frequency-reported/" + requirement.index ,
                        visuallyHiddenText: "Reporting"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Agreements exceptions"
                  },
                  value: {
                    html: "requirement.agreementsExceptions"
                  },
                  actions: {
                    items: [
                      {
                        html: '<span data-test="meta-data-change-agreements-exceptions">' + 'Change' + '</span>',
                        href: "agreements-exceptions/" + requirement.index ,
                        visuallyHiddenText: "Agreements exception"
                      }
                    ]
                  }
                }
              ]
            }) }}
          {% if requirements.length >= 2 %}
            {{ govukButton({
              text: "Remove requirement",
              classes: "govuk-button--warning",
              preventDoubleClick: true,
              href: "/system/return-requirements/" + sessionId + "/remove/" + requirement.index
            }) }}
          {% endif %}
        </div>
      {% endfor %}
    </div>
  {% endif %}

  <form method="post">
    <div class="govuk-body">
      {% if journey == 'no-returns-required' %}
        <h3 class="govuk-heading-m">Returns are not required for this licence</h3>
        <hr class="govuk-!-margin-bottom-5 govuk-section-break--s govuk-section-break--visible">
      {% endif %}
      {% if journey == 'returns-required' %}
        {{ govukSummaryList({
          classes: 'govuk-!-margin-bottom-2',
          rows: [
            {
              classes: 'govuk-summary-list',
              key: {
                text: 'Additional submission options',
                classes: "govuk-heading-m govuk-!-width-one-half"
              },
              value: {
                text: ''
              },
              actions: {
                items: [
                  {
                    href: "additional-submission-options",
                    text: "Change"
                  }
                ]
              }
            },
            {
              classes: 'govuk-summary-list govuk-summary-list__row--no-border',
              key: {
                text: 'Multiple upload',
                classes: "govuk-body "
              },
              value: {
                text: 'Yes' if additionalSubmissionOptions.includes('multiple-upload') else "No"
              }
            }
          ]
        }) }}
      {% endif %}

      <hr class="govuk-section-break govuk-section-break--xl govuk-section-break--visible">

      {{ govukButton({
        html: '<span data-test="meta-data-approve">' + "Approve returns requirements" + "</span>",
        classes: "govuk-!-margin-right-6",
        preventDoubleClick: true
      }) }}

      {{ govukButton({
        text: "Cancel return requirements",
        classes: "govuk-button--secondary",
        preventDoubleClick: true,
        href: "/system/return-requirements/" + sessionId + "/cancel"
      }) }}
    </div>
  </form>
{% endblock %}
